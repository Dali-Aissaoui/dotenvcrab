name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-rust:
    name: Build Rust Binary (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: dotenvcrab-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: dotenvcrab-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: dotenvcrab-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: dotenvcrab-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: dotenvcrab-windows-amd64.exe

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools
        if: contains(matrix.target, 'aarch64') && contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ contains(matrix.target, 'aarch64') && contains(matrix.os, 'ubuntu') }}

      - name: Rename binary
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/dotenvcrab.exe ${{ matrix.artifact_name }}
          else
            cp target/${{ matrix.target }}/release/dotenvcrab ${{ matrix.artifact_name }}
            chmod +x ${{ matrix.artifact_name }}
          fi

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  create-release:
    name: Create GitHub Release
    needs: build-rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: dotenvcrab v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            dotenvcrab-linux-amd64/dotenvcrab-linux-amd64
            dotenvcrab-linux-arm64/dotenvcrab-linux-arm64
            dotenvcrab-macos-amd64/dotenvcrab-macos-amd64
            dotenvcrab-macos-arm64/dotenvcrab-macos-arm64
            dotenvcrab-windows-amd64.exe/dotenvcrab-windows-amd64.exe

  publish-npm:
    name: Publish NPM Package
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Update package version
        run: |
          cd npm-package
          npm version ${{ env.VERSION }} --no-git-tag-version

      - name: Publish to NPM
        run: |
          cd npm-package
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
